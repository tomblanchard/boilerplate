/***********************************************************************************
  TRUMP CLASSES: WIDTHS
 ***********************************************************************************

  Generate width classes (mostly used with the `grid` object).

 **********************************************************************************/

/**
  Define all placeholder width classes which can be prefixed with a dynamic
  string.
 */

@mixin grid-width-gen ( $namespace: "" ) {

  /**
    Whole
   */
  %#{$namespace}\31\/1 { width: 100%; }

  /**
    Halves
   */
  %#{$namespace}\31\/2 { width: 50%; }

  /**
    Thirds
   */
  %#{$namespace}\31\/3 { width: 33.333%; }
  %#{$namespace}\32\/3 { width: 66.666%; }

  /**
    Quarters
   */
  %#{$namespace}\31\/4 { width: 25%; }
  %#{$namespace}\32\/4 { @extend %#{$namespace}\31\/2; }
  %#{$namespace}\33\/4 { width: 75%; }

  /**
    Fifths
   */
  %#{$namespace}\31\/5 { width: 20%; }
  %#{$namespace}\32\/5 { width: 40%; }
  %#{$namespace}\33\/5 { width: 60%; }
  %#{$namespace}\34\/5 { width: 80%; }

  /**
    Sixths
   */
  %#{$namespace}\31\/6 { width: 16.666%; }
  %#{$namespace}\32\/6 { @extend %#{$namespace}\31\/3; }
  %#{$namespace}\33\/6 { @extend %#{$namespace}\31\/2; }
  %#{$namespace}\34\/6 { @extend %#{$namespace}\32\/3; }
  %#{$namespace}\35\/6 { width: 83.333%; }

  /**
    Sevenths
   */
  %#{$namespace}\31\/7 { width: 14.285%; }
  %#{$namespace}\32\/7 { width: 28.57%; }
  %#{$namespace}\33\/7 { width: 42.855%; }
  %#{$namespace}\34\/7 { width: 57.14%; }
  %#{$namespace}\35\/7 { width: 71.425%; }
  %#{$namespace}\36\/7 { width: 85.71%; }

  /**
    Eighths
   */
  %#{$namespace}\31\/8 { width: 12.5%; }
  %#{$namespace}\32\/8 { @extend %#{$namespace}\31\/4; }
  %#{$namespace}\33\/8 { width: 37.5%; }
  %#{$namespace}\34\/8 { @extend %#{$namespace}\31\/2; }
  %#{$namespace}\35\/8 { width: 62.5%; }
  %#{$namespace}\36\/8 { @extend %#{$namespace}\33\/4; }
  %#{$namespace}\37\/8 { width: 87.5%; }

  /**
    Ninths
   */
  %#{$namespace}\31\/9 { width: 11.111%; }
  %#{$namespace}\32\/9 { width: 22.222%; }
  %#{$namespace}\33\/9 { @extend %#{$namespace}\31\/3; }
  %#{$namespace}\34\/9 { width: 44.444%; }
  %#{$namespace}\35\/9 { width: 55.555%; }
  %#{$namespace}\36\/9 { @extend %#{$namespace}\32\/3; }
  %#{$namespace}\37\/9 { width: 77.777%; }
  %#{$namespace}\38\/9 { width: 88.888%; }

  /**
    Tenths
   */
  %#{$namespace}\31\/10 { width: 10%; }
  %#{$namespace}\32\/10 { @extend %#{$namespace}\31\/5; }
  %#{$namespace}\33\/10 { width: 30%; }
  %#{$namespace}\34\/10 { @extend %#{$namespace}\32\/5; }
  %#{$namespace}\35\/10 { @extend %#{$namespace}\31\/2; }
  %#{$namespace}\36\/10 { @extend %#{$namespace}\33\/5; }
  %#{$namespace}\37\/10 { width: 70%; }
  %#{$namespace}\38\/10 { @extend %#{$namespace}\34\/5; }
  %#{$namespace}\39\/10 { width: 90%; }

  /**
    Elevenths
   */
  %#{$namespace}\31\/11  { width: 9.090%; }
  %#{$namespace}\32\/11  { width: 18.18%; }
  %#{$namespace}\33\/11  { width: 27.27%; }
  %#{$namespace}\34\/11  { width: 36.36%; }
  %#{$namespace}\35\/11  { width: 45.45%; }
  %#{$namespace}\36\/11  { width: 54.54%; }
  %#{$namespace}\37\/11  { width: 63.63%; }
  %#{$namespace}\38\/11  { width: 72.72%; }
  %#{$namespace}\39\/11  { width: 81.81%; }
  %#{$namespace}\310\/11 { width: 90.9%; }

  /**
    Twelfths
   */
  %#{$namespace}\31\/12  { width: 8.333%; }
  %#{$namespace}\32\/12  { @extend %#{$namespace}\31\/6; }
  %#{$namespace}\33\/12  { @extend %#{$namespace}\31\/4; }
  %#{$namespace}\34\/12  { @extend %#{$namespace}\31\/3; }
  %#{$namespace}\35\/12  { width: 41.666% }
  %#{$namespace}\36\/12  { @extend %#{$namespace}\31\/2; }
  %#{$namespace}\37\/12  { width: 58.333%; }
  %#{$namespace}\38\/12  { @extend %#{$namespace}\32\/3; }
  %#{$namespace}\39\/12  { @extend %#{$namespace}\33\/4; }
  %#{$namespace}\310\/12 { @extend %#{$namespace}\35\/6; }
  %#{$namespace}\311\/12 { width: 91.666%; }

  /**
    Custom classes / widths defined in `$custom-grid-widths` (located in `_config.scss`).
   */
  @each $class, $size in $custom-grid-widths {
    %#{$namespace}#{$class} { width: #{$size}; }
  }

}


/**
  Make all regular non-prefixed placeholder width classes available to use.
 */

@include grid-width-gen();


/**
  Grab each name of every breakpoint and generate all placeholder width classes
  again, but prefix each set of classes with their corresponding breakpoint name
  then wrap each set of classes in their correct media query.
 */

@each $name, $declaration in $breakpoints {

  @include media-query( $name, true ) {
    @include grid-width-gen( '#{$name}--' );
  }

}


/**
  We don't want to output every width class (and the breakpoint specific ones)
  in the CSS because we'd never need to use them all so we only generate an actual
  CSS class for every placeholder class defined in the `$grid-widths-to-output`
  (located in `_config.scss`) list.
 */

// For each width class we want to output (defined in `$grid-widths-to-output`)
@each $class in $grid-widths-to-output {

  // If not the `lt-ie-9` stylesheet then output every width class defined, no matter
  // what. But if we are on the `lt-ie-9` stylesheet then output every width class
  // defined except ones that contain the string `-down--`. The reason not to output
  // those certain width classes is because they're powered by `max-width` media
  // queries which are useless to `lt-ie-9` browsers
  @if not $is-lt-ie-9-stylesheet or $is-lt-ie-9-stylesheet and not str-index( $class, '-down--' ) {

    $new-class: $class;

    // Fraction classes (e.g. `1/5`) aren't valid CSS, this manipulate the class to be
    // valid, this would transform `.1/5` into `.\31\/5`, then to use the class in HTML
    // it's as simple as `class="1/5"`.
    @for $i from 1 to 12 {
      @if str-index( $class, '#{$i}/' ) {
        $new-class: unquote( str-replace( $class, '#{$i}/', '\\3#{$i}\\/'  ) );
      }
    }

    .#{$new-class} {
      @extend %#{$new-class};
    }

  }

}